{"version":3,"sources":["Services/Constants.service.js","Services/Request.service.js","Context/MainContext.context.js","Components/ProductsTable/ProductsTable.component.js","Components/Modal/Modal.component.js","Components/Button/Button.component.js","Components/Forms/FormControl/FormControl.component.js","Components/Forms/AddProductForm/AddProductForm.component.js","Components/Forms/UpdateProductForm/UpdateProductForm.component.js","Components/Forms/AddPriceForm/AddPriceForm.component.js","Components/Forms/EnableProductForm/EnableProductForm.component.js","Components/Forms/DisableProductForm/DisableProductForm.component.js","Components/Main/Main.component.js","App.js","index.js"],"names":["get","url","a","Axios","Constants","post","data","put","MainContext","React","createContext","Provider","MainProvider","Consumer","children","useState","refresh","setRefresh","modalVisible","setModalVisible","productToUpdate","setProductToUpdate","successMessage","setSuccessMessage","products","setProducts","useEffect","Request","response","getProducts","addProduct","barcode","name","quantity","success","getProduct","id","product","updateProduct","setPrice","price","enable","disable","isDuplicated","duplicated","isDuplicatedForUpdate","value","ProductsTable","props","useContext","length","repetitions","i","push","map","key","toString","className","enabled","src","alt","onClick","_id","renderProducts","Modal","form","Button","text","FormControls","Fragment","htmlFor","required","label","type","onChange","message","AddProductForm","setProduct","errorFields","setErrorFields","onSubmit","event","errors","test","trim","includes","startsWith","Number","isInteger","setTimeout","OnChangeText","target","UpdateProductForm","AddPriceForm","EnableProductForm","DisableProductForm","MainMenu","App","path","exact","component","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAAe,EACD,wCCEC,GACbA,IAAI,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,sEACUC,IAAMH,IAAN,UAAaI,EAAb,eAAwCH,IADlD,mFAAF,mDAAC,GAGJI,KAAK,WAAD,4BAAE,WAAOJ,EAAKK,GAAZ,SAAAJ,EAAA,sEACSC,IAAME,KAAN,UAAcD,EAAd,eAAyCH,GAAOK,GADzD,mFAAF,qDAAC,GAGLC,IAAI,WAAD,4BAAE,WAAON,EAAKK,GAAZ,SAAAJ,EAAA,sEACUC,IAAMI,IAAN,UAAaH,EAAb,eAAwCH,GAAOK,GADzD,mFAAF,qDAAC,ICRAE,EAAcC,IAAMC,gBAClBC,EAAuBH,EAAvBG,SAEFC,GAFyBJ,EAAbK,SAEG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,oBAAS,GADF,mBAC9BC,EAD8B,KACrBC,EADqB,OAEGF,mBAAS,MAFZ,mBAE9BG,EAF8B,KAEhBC,EAFgB,OAGSJ,mBAAS,IAHlB,mBAG9BK,EAH8B,KAGbC,EAHa,OAION,mBAAS,IAJhB,mBAI9BO,EAJ8B,KAIdC,EAJc,OAMLR,mBAAS,IANJ,mBAM9BS,EAN8B,KAMpBC,EANoB,KAQrCC,qBAAU,YACS,uCAAG,4BAAAxB,EAAA,sEACKyB,EAAQ3B,IAAI,aADjB,OACZ4B,EADY,OAElBH,EAAYG,EAAStB,MAFH,2CAAH,qDAIjBuB,GACAZ,GAAW,KACV,CAACD,IAEJ,IAAMc,EAAU,uCAAG,WAAOC,EAASC,EAAMC,GAAtB,eAAA/B,EAAA,sEACMyB,EAAQtB,KAAK,YAAa,CAAE0B,UAASC,OAAMC,aADjD,YACXL,EADW,QAEFtB,KAAK4B,QAFH,uBAGfjB,GAAW,GAHI,kBAIRW,EAAStB,KAAK4B,SAJN,2CAAH,0DAQVC,EAAU,uCAAG,WAAOC,GAAP,eAAAlC,EAAA,sEACMyB,EAAQ3B,IAAR,oBAAyBoC,IAD/B,YACXR,EADW,QAEFtB,KAAK4B,QAFH,yCAGRN,EAAStB,KAAK+B,SAHN,gCAKV,IALU,2CAAH,sDAQVC,EAAa,uCAAG,WAAOF,EAAIL,EAASC,EAAMC,GAA1B,eAAA/B,EAAA,sEACGyB,EAAQpB,IAAR,oBAAyB6B,GAAM,CAAEL,UAASC,OAAMC,aADnD,YACdL,EADc,QAELtB,KAAK4B,QAFA,uBAGlBjB,GAAW,GAHO,kBAIXW,EAAStB,KAAK4B,SAJH,2CAAH,4DAQbK,EAAQ,uCAAG,WAAOH,EAAII,GAAX,eAAAtC,EAAA,sEACQyB,EAAQpB,IAAR,6BAAkC6B,GAAM,CAAEI,UADlD,YACTZ,EADS,QAEAtB,KAAK4B,QAFL,uBAGbjB,GAAW,GAHE,kBAINW,EAAStB,KAAK4B,SAJR,2CAAH,wDAQRO,EAAM,uCAAG,WAAOL,GAAP,eAAAlC,EAAA,sEACUyB,EAAQpB,IAAR,2BAAgC6B,IAD1C,YACPR,EADO,QAEEtB,KAAK4B,QAFP,uBAGXjB,GAAW,GAHA,kBAIJW,EAAStB,KAAK4B,SAJV,2CAAH,sDAQNQ,EAAO,uCAAG,WAAON,GAAP,eAAAlC,EAAA,sEACSyB,EAAQpB,IAAR,4BAAiC6B,IAD1C,YACRR,EADQ,QAECtB,KAAK4B,QAFN,uBAGZjB,GAAW,GAHC,kBAILW,EAAStB,KAAK4B,SAJT,2CAAH,sDAQPS,EAAY,uCAAG,WAAOZ,GAAP,eAAA7B,EAAA,sEACIyB,EAAQ3B,IAAR,iCAAsC+B,IAD1C,cACbH,EADa,yBAEZA,EAAStB,KAAKsC,YAFF,2CAAH,sDAKZC,EAAqB,uCAAG,WAAOT,EAAIL,GAAX,eAAA7B,EAAA,sEACLyB,EAAQ3B,IAAR,0CAA+CoC,EAA/C,YAAqDL,IADhD,cACtBH,EADsB,yBAErBA,EAAStB,KAAKsC,YAFO,2CAAH,wDAK3B,OACE,kBAACjC,EAAD,CACEmC,MAAO,CACLtB,WACAM,aACAK,aACAG,gBACAC,WACAE,SACAC,UACAxB,eACAC,kBACAwB,eACAE,wBACAzB,kBACAC,qBACAC,iBACAC,sBAGDT,K,YChGQ,SAASiC,EAAcC,GAAQ,IAAD,EACiBC,qBAAWzC,GAA/DW,EADmC,EACnCA,gBAAiBE,EADkB,EAClBA,mBAAoBc,EADF,EACEA,WACvCX,EAAWwB,EAAMxB,UAAY,GAwEnC,OACE,yBAAKY,GAAG,kBACN,+BACE,+BACE,4BACE,mDACA,mDACA,0CACA,+CACA,0CAGJ,+BAlFiB,WACrB,GAAIZ,EAAS0B,OAAS,EAEpB,IADA,IAAMC,EAAc,EAAI3B,EAAS0B,OACxBE,EAAI,EAAGA,EAAID,EAAaC,IAC/B5B,EAAS6B,KAAK,IAGlB,OAAO7B,EAAS8B,KAAI,SAACjB,EAASe,GAC5B,OACE,wBAAIG,IAAKH,GACP,4BAAKf,EAAQN,SACb,4BAAKM,EAAQL,MACb,4BAAKK,EAAQJ,UACb,4BAAKI,EAAQG,MAAQH,EAAQG,MAAMgB,WAAa,IAChD,4BACE,yBAAKC,UAAU,mBACZpB,EAAQG,MACPH,EAAQqB,QACN,yBACEC,IAAI,qBACJC,IAAI,eACJC,QAAO,sBAAE,sBAAA3D,EAAA,kEACPmB,EADO,SACkBc,EAAWE,EAAQyB,KADrC,kCAEP3C,EAAgB,kBAFT,6CAMX,yBACEwC,IAAI,qBACJC,IAAI,YACJC,QAAO,sBAAE,sBAAA3D,EAAA,kEACPmB,EADO,SACkBc,EAAWE,EAAQyB,KADrC,kCAEP3C,EAAgB,iBAFT,6CAOb,yBAAKsC,UAAU,aAAaE,IAAI,oBAAoBC,IAAI,WAExDvB,EAAQN,SAAWM,EAAQqB,QAC3B,yBAAKD,UAAU,aAAaE,IAAI,oBAAoBC,IAAI,UAExD,yBACED,IAAI,yBACJC,IAAI,SACJC,QAAO,sBAAE,sBAAA3D,EAAA,kEACPmB,EADO,SACkBc,EAAWE,EAAQyB,KADrC,kCAEP3C,EAAgB,YAFT,8CAMXkB,EAAQN,SAAWM,EAAQqB,QAC3B,yBAAKD,UAAU,aAAaE,IAAI,oBAAoBC,IAAI,UAExD,yBACED,IAAI,uBACJC,IAAI,SACJC,QAAO,sBAAE,sBAAA3D,EAAA,kEACPmB,EADO,SACkBc,EAAWE,EAAQyB,KADrC,kCAEP3C,EAAgB,iBAFT,mDAyBX4C,M,MCtFD,SAASC,EAAMhB,GAAQ,IAC5B9B,EAAiB+B,qBAAWzC,GAA5BU,aAER,OACE,yBAAKuC,UAAS,0BAAqBvC,IAAiB8B,EAAMlC,SAASkC,MAAMiB,KAAO,SAAW,KACzF,yBAAKR,UAAU,aAAaT,EAAMlC,W,0BCNzB,SAASoD,EAAOlB,GAAQ,IAC7Ba,EAAkBb,EAAlBa,QAASM,EAASnB,EAATmB,KAEjB,OACE,yBAAKV,UAAU,SAASI,QAASA,GAC9BM,G,MCLQ,SAASC,EAAapB,GACnC,OACE,kBAAC,IAAMqB,SAAP,KACE,yBAAKZ,UAAU,gBACb,2BAAOa,QAAStB,EAAMZ,IACnBY,EAAMuB,UAAY,0BAAMd,UAAU,YAAhB,KAClBT,EAAMwB,OAET,yBAAKf,UAAU,cACb,2BAAOgB,KAAK,OAAOrC,GAAIY,EAAMZ,GAAIU,MAAOE,EAAMF,MAAO4B,SAAU1B,EAAM0B,WACrE,yBAAKjB,UAAS,wBAAmBT,EAAMJ,WAAa,aAAe,KAAOI,EAAM2B,YCP3E,SAASC,IAAkB,IAAD,EACkC3B,qBAAWzC,GAA5Ee,EAD+B,EAC/BA,kBAAmBJ,EADY,EACZA,gBAAiBW,EADL,EACKA,WAAYa,EADjB,EACiBA,aADjB,EAET5B,mBAAS,CACrC,qBAAsB,GACtB,kBAAmB,GACnB,sBAAuB,KALc,mBAEhCsB,EAFgC,KAEvBwC,EAFuB,OAOD9D,mBAAS,CAC7C,qBAAsB,GACtB,iCAAiC,EACjC,kBAAmB,GACnB,sBAAuB,KAXc,mBAOhC+D,EAPgC,KAOnBC,EAPmB,KAcjCC,EAAQ,uCAAG,WAAOC,GAAP,eAAA/E,EAAA,yDACXgF,EAAS,CAAEnD,QAAS,GAAIa,YAAY,EAAOZ,KAAM,GAAIC,SAAU,IAE9DI,EAAQ,sBAHE,gBAIb6C,EAAOnD,QAAU,oBAJJ,0BAMZ,6BAA6BoD,KAAK9C,EAAQ,0BAC3CA,EAAQ,sBAAsBa,OAAS,IAP1B,gBASbgC,EAAOnD,QAAU,qBATJ,wCAUEY,EAAaN,EAAQ,uBAVvB,oCAWb6C,EAAOtC,YAAa,EACpBsC,EAAOnD,QAAU,gCAZJ,WAeVM,EAAQ,qBAEDA,EAAQ,mBAAmB+C,QAAU/C,EAAQ,mBAAmBa,OAAS,MACnFgC,EAAOlD,KAAO,sBAFdkD,EAAOlD,KAAO,oBAKXK,EAAQ,wBAGXA,EAAQ,uBAAuBgD,SAAS,MACxChD,EAAQ,uBAAuBiD,WAAW,OACzCC,OAAOlD,EAAQ,0BACfkD,OAAOC,UAAUD,OAAOlD,EAAQ,0BACjCA,EAAQ,uBAAyB,GACjCA,EAAQ,uBAAyB,OAEjC6C,EAAOjD,SAAW,sBATlBiD,EAAOjD,SAAW,oBAYpB8C,EAAe,CACb,qBAAsBG,EAAOnD,QAC7B,gCAAiCmD,EAAOtC,WACxC,kBAAmBsC,EAAOlD,KAC1B,sBAAuBkD,EAAOjD,WAG3BiD,EAAOnD,SAAYmD,EAAOtC,YAAesC,EAAOlD,MAASkD,EAAOjD,SAzCtD,kCA2CLH,EACJO,EAAQ,sBACRA,EAAQ,mBACRkD,OAAOlD,EAAQ,yBA9CN,oCAiDXwC,EAAW,CACT,qBAAsB,GACtB,kBAAmB,GACnB,sBAAuB,KAEzB1D,EAAgB,MAChBI,EAAkB,8CAClBkE,YAAW,WACTlE,EAAkB,MACjB,KA1DQ,4CAAH,sDA8ERmE,EAAe,SAACT,GAAW,IAAD,EACRA,EAAMU,OAApBvD,EADsB,EACtBA,GAAIU,EADkB,EAClBA,MACZ+B,EAAW,2BACNxC,GADK,eAGLD,EAAKU,MAKZ,OACE,yBAAKW,UAAU,eAAerB,GAAG,cAC/B,yBAAKqB,UAAU,cAAf,sBACA,8BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBAAf,2BAC0B,0BAAMA,UAAU,YAAhB,KAD1B,qBAGA,kBAAC,EAAD,CACErB,GAAG,qBACHoC,MAAM,uBACND,UAAU,EACVI,QAASG,EAAY,sBACrBhC,MAAOT,EAAQ,sBACfqC,SAAUgB,EACV9C,WAAYkC,EAAY,mCAE1B,kBAAC,EAAD,CACE1C,GAAG,kBACHoC,MAAM,uBACND,UAAU,EACVI,QAASG,EAAY,mBACrBhC,MAAOT,EAAQ,mBACfqC,SAAUgB,IAEZ,kBAAC,EAAD,CACEtD,GAAG,sBACHoC,MAAM,2BACND,UAAU,EACVI,QAASG,EAAY,uBACrBhC,MAAOT,EAAQ,uBACfqC,SAAUgB,KAGd,yBAAKjC,UAAU,gBACb,kBAACS,EAAD,CAAQL,QAASmB,EAAUb,KAAK,YAChC,kBAACD,EAAD,CAAQL,QA7DC,SAACoB,GAChBJ,EAAW,CACT,qBAAsB,GACtB,kBAAmB,GACnB,sBAAuB,KAEzBE,EAAe,CACb,qBAAsB,GACtB,gCAAiC,GACjC,kBAAmB,GACnB,sBAAuB,KAEzB5D,EAAgB,OAiDiBgD,KAAK,gBC1I3B,SAASyB,IAAqB,IAAD,EAQtC3C,qBAAWzC,GANbe,EAFwC,EAExCA,kBACAL,EAHwC,EAGxCA,aACAC,EAJwC,EAIxCA,gBACAmB,EALwC,EAKxCA,cACAO,EANwC,EAMxCA,sBACAzB,EAPwC,EAOxCA,gBAPwC,EASZL,mBAAS,CACrC,wBAAyB,GACzB,qBAAsB,GACtB,yBAA0B,KAZc,mBASnCsB,EATmC,KAS1BwC,EAT0B,OAcJ9D,mBAAS,CAC7C,wBAAyB,GACzB,oCAAoC,EACpC,qBAAsB,GACtB,yBAA0B,KAlBc,mBAcnC+D,EAdmC,KActBC,EAdsB,KAqB1CrD,qBAAU,WACa,kBAAjBR,GACF2D,EAAW,CACT,wBAAyBzD,EAAgBW,QAAQyB,WACjD,qBAAsBpC,EAAgBY,KAAKwB,WAC3C,yBAA0BpC,EAAgBa,SAASuB,eAGtD,CAACtC,IAEJ,IAAM8D,EAAQ,uCAAG,WAAOC,GAAP,eAAA/E,EAAA,yDACXgF,EAAS,CAAEnD,QAAS,GAAIa,YAAY,EAAOZ,KAAM,GAAIC,SAAU,IAE9DI,EAAQ,yBAHE,gBAIb6C,EAAOnD,QAAU,oBAJJ,0BAMZ,6BAA6BoD,KAAK9C,EAAQ,6BAC3CA,EAAQ,yBAAyBa,OAAS,IAP7B,gBASbgC,EAAOnD,QAAU,qBATJ,wCAUEc,EAAsBzB,EAAgB0C,IAAKzB,EAAQ,0BAVrD,oCAWb6C,EAAOtC,YAAa,EACpBsC,EAAOnD,QAAU,gCAZJ,WAeVM,EAAQ,wBAEDA,EAAQ,sBAAsB+C,QAAU/C,EAAQ,sBAAsBa,OAAS,MACzFgC,EAAOlD,KAAO,sBAFdkD,EAAOlD,KAAO,oBAKXK,EAAQ,2BAGXA,EAAQ,0BAA0BgD,SAAS,MAC3ChD,EAAQ,0BAA0BiD,WAAW,OAC5CC,OAAOlD,EAAQ,6BACfkD,OAAOC,UAAUD,OAAOlD,EAAQ,6BACjCA,EAAQ,0BAA4B,GACpCA,EAAQ,0BAA4B,OAEpC6C,EAAOjD,SAAW,sBATlBiD,EAAOjD,SAAW,oBAYpB8C,EAAe,CACb,wBAAyBG,EAAOnD,QAChC,mCAAoCmD,EAAOtC,WAC3C,qBAAsBsC,EAAOlD,KAC7B,yBAA0BkD,EAAOjD,WAG9BiD,EAAOnD,SAAYmD,EAAOtC,YAAesC,EAAOlD,MAASkD,EAAOjD,SAzCtD,kCA2CLK,EACJlB,EAAgB0C,IAChBzB,EAAQ,yBACRA,EAAQ,sBACRkD,OAAOlD,EAAQ,4BA/CN,oCAkDXwC,EAAW,CACT,wBAAyB,GACzB,qBAAsB,GACtB,yBAA0B,KAE5B1D,EAAgB,MAChBI,EAAkB,2CAClBkE,YAAW,WACTlE,EAAkB,MACjB,KA3DQ,4CAAH,sDA+ERmE,EAAe,SAACT,GAAW,IAAD,EACRA,EAAMU,OAApBvD,EADsB,EACtBA,GAAIU,EADkB,EAClBA,MACZ+B,EAAW,2BACNxC,GADK,eAGLD,EAAKU,MAKZ,OACE,yBAAKW,UAAU,eAAerB,GAAG,iBAC/B,yBAAKqB,UAAU,cAAf,mBACA,8BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBAAf,2BAC0B,0BAAMA,UAAU,YAAhB,KAD1B,qBAGA,kBAAC,EAAD,CACErB,GAAG,wBACHoC,MAAM,uBACND,UAAU,EACVI,QAASG,EAAY,yBACrBhC,MAAOT,EAAQ,yBACfqC,SAAUgB,EACV9C,WAAYkC,EAAY,sCAE1B,kBAAC,EAAD,CACE1C,GAAG,qBACHoC,MAAM,uBACND,UAAU,EACVI,QAASG,EAAY,sBACrBhC,MAAOT,EAAQ,sBACfqC,SAAUgB,IAEZ,kBAAC,EAAD,CACEtD,GAAG,yBACHoC,MAAM,2BACND,UAAU,EACVI,QAASG,EAAY,0BACrBhC,MAAOT,EAAQ,0BACfqC,SAAUgB,KAGd,yBAAKjC,UAAU,gBACb,kBAACS,EAAD,CAAQL,QAASmB,EAAUb,KAAK,YAChC,kBAACD,EAAD,CAAQL,QA7DC,SAACoB,GAChBJ,EAAW,CACT,wBAAyB,GACzB,qBAAsB,GACtB,yBAA0B,KAE5BE,EAAe,CACb,wBAAyB,GACzB,mCAAoC,GACpC,qBAAsB,GACtB,yBAA0B,KAE5B5D,EAAgB,OAiDiBgD,KAAK,gBC5J3B,SAAS0B,IAAgB,IAAD,EACmD5C,qBAAWzC,GAA3Fe,EAD6B,EAC7BA,kBAAmBL,EADU,EACVA,aAAcC,EADJ,EACIA,gBAAiBoB,EADrB,EACqBA,SAAUnB,EAD/B,EAC+BA,gBAD/B,EAEPL,mBAAS,CACrC,iBAAkB,KAHiB,mBAE9BsB,EAF8B,KAErBwC,EAFqB,OAKC9D,mBAAS,CAC7C,iBAAkB,KANiB,mBAK9B+D,EAL8B,KAKjBC,EALiB,KASrCrD,qBAAU,WACa,aAAjBR,GACF2D,EAAW,CACT,iBAAkBzD,EAAgBoB,MAAQpB,EAAgBoB,MAAMgB,WAAa,OAGhF,CAACtC,IAEJ,IAAM8D,EAAQ,uCAAG,WAAOC,GAAP,eAAA/E,EAAA,yDACXgF,EAAS,CAAE1C,MAAO,IAEjBH,EAAQ,kBAHE,iCAIHE,EAASnB,EAAgB0C,IAAKyB,OAAOlD,EAAQ,oBAJ1C,kCAKXwC,EAAW,CACT,iBAAkB,KAEpB1D,EAAgB,MACXC,EAAgBoB,OAGnBjB,EAAkB,0CAClBkE,YAAW,WACTlE,EAAkB,MACjB,MALHA,EAAkB,IAVT,2CAoBZ,6BAA6B4D,KAAK9C,EAAQ,oBAC3CA,EAAQ,kBAAkBiD,WAAW,OACpCC,OAAOlD,EAAQ,oBAChBA,EAAQ,kBAAoB,GAC5BA,EAAQ,kBAAoB,QAE5B6C,EAAO1C,MAAQ,sBA1BF,WA6BfuC,EAAe,CACb,iBAAkBG,EAAO1C,QAGtB0C,EAAO1C,MAjCG,kCAkCHD,EAASnB,EAAgB0C,IAAKyB,OAAOlD,EAAQ,oBAlC1C,oCAmCXwC,EAAW,CACT,iBAAkB,KAEpB1D,EAAgB,MAChBI,EAAkB,0CAClBkE,YAAW,WACTlE,EAAkB,MACjB,KA1CQ,4CAAH,sDAmEd,OACE,yBAAKkC,UAAU,eAAerB,GAAG,YAC/B,yBAAKqB,UAAU,cAAf,kBACA,8BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qBACf,2BAAOA,UAAU,aACf,4BACE,wBAAIA,UAAU,YACZ,qDAEF,wBAAIA,UAAU,SAASrC,EAAgBW,UAEzC,4BACE,wBAAI0B,UAAU,YACZ,qDAEF,wBAAIA,UAAU,SAASrC,EAAgBY,OAEzC,4BACE,wBAAIyB,UAAU,YACZ,yDAEF,wBAAIA,UAAU,SAASrC,EAAgBa,YAG3C,kBAAC,EAAD,CACEG,GAAG,iBACHoC,MAAM,UACND,UAAU,EACVI,QAASG,EAAY,kBACrBhC,MAAOT,EAAQ,kBACfqC,SA1CW,SAACO,GAAW,IAAD,EACRA,EAAMU,OAApBvD,EADsB,EACtBA,GAAIU,EADkB,EAClBA,MACZ+B,EAAW,2BACNxC,GADK,eAGLD,EAAKU,SAwCN,yBAAKW,UAAU,gBACb,kBAACS,EAAD,CAAQL,QAASmB,EAAUb,KAAK,YAChC,kBAACD,EAAD,CAAQL,QAzDC,SAACoB,GAChBJ,EAAW,CACT,iBAAkB,KAEpBE,EAAe,CACb,iBAAkB,KAEpB5D,EAAgB,OAkDiBgD,KAAK,gBC1H3B,SAAS2B,IAAqB,IAAD,EACW7C,qBAAWzC,GAAxDW,EADkC,EAClCA,gBAAiBsB,EADiB,EACjBA,OAAQrB,EADS,EACTA,gBAE3B4D,EAAQ,uCAAG,WAAOC,GAAP,SAAA/E,EAAA,sEACLuC,EAAOrB,EAAgB0C,KADlB,kCAEb3C,EAAgB,MAFH,2CAAH,sDAUd,OACE,yBAAKsC,UAAU,eAAerB,GAAG,iBAC/B,yBAAKqB,UAAU,cAAf,sBACA,8BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBAAf,6CACsC,2BAAIrC,EAAgBY,KAApB,KACpC,6BAFF,4BAGwB,2BAAIZ,EAAgBW,SAH5C,MAMF,yBAAK0B,UAAU,gBACb,kBAACS,EAAD,CAAQL,QAASmB,EAAUb,KAAK,YAChC,kBAACD,EAAD,CAAQL,QAjBC,SAACoB,GAChB9D,EAAgB,OAgBiBgD,KAAK,gBC1B3B,SAAS4B,IAAsB,IAAD,EACW9C,qBAAWzC,GAAzDW,EADmC,EACnCA,gBAAiBuB,EADkB,EAClBA,QAAStB,EADS,EACTA,gBAE5B4D,EAAQ,uCAAG,WAAOC,GAAP,SAAA/E,EAAA,sEACLwC,EAAQtB,EAAgB0C,KADnB,kCAEb3C,EAAgB,MAFH,2CAAH,sDAUd,OACE,yBAAKsC,UAAU,eAAerB,GAAG,kBAC/B,yBAAKqB,UAAU,cAAf,yBACA,8BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBAAf,gDACyC,2BAAIrC,EAAgBY,KAApB,KACvC,6BAFF,4BAGwB,2BAAIZ,EAAgBW,SAH5C,MAMF,yBAAK0B,UAAU,gBACb,kBAACS,EAAD,CAAQL,QAASmB,EAAUb,KAAK,YAChC,kBAACD,EAAD,CAAQL,QAjBC,SAACoB,GAChB9D,EAAgB,OAgBiBgD,KAAK,gBCnB3B,SAAS6B,IAAY,IAAD,EACqB/C,qBAAWzC,GAAzDc,EADyB,EACzBA,eAAgBE,EADS,EACTA,SAAUL,EADD,EACCA,gBAClC,OACE,yBAAKiB,GAAG,QACN,kBAAC4B,EAAD,KACE,kBAACY,EAAD,CAAgBX,KAAK,gBAEvB,kBAACD,EAAD,KACE,kBAAC4B,EAAD,CAAmB3B,KAAK,mBAE1B,kBAACD,EAAD,KACE,kBAAC6B,EAAD,CAAc5B,KAAK,cAErB,kBAACD,EAAD,KACE,kBAAC8B,EAAD,CAAmB7B,KAAK,mBAE1B,kBAACD,EAAD,KACE,kBAAC+B,EAAD,CAAoB9B,KAAK,oBAE3B,yBAAK7B,GAAG,cAAR,4BACA,yBAAKA,GAAG,gBAAgBd,GACxB,kBAACyB,EAAD,CAAevB,SAAUA,IACzB,kBAAC0C,EAAD,CAAQL,QAAS,kBAAM1C,EAAgB,eAAegD,KAAK,eCZlD8B,MAVf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,OCZzCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.8dbd22f3.chunk.js","sourcesContent":["export default {\r\n  backendURL: \"https://team-market-app.herokuapp.com\",\r\n};\r\n","import Axios from \"axios\";\r\nimport Constants from \"./Constants.service\";\r\n\r\nexport default {\r\n  get: async (url) => {\r\n    return await Axios.get(`${Constants.backendURL}/api${url}`);\r\n  },\r\n  post: async (url, data) => {\r\n    return await Axios.post(`${Constants.backendURL}/api${url}`, data);\r\n  },\r\n  put: async (url, data) => {\r\n    return await Axios.put(`${Constants.backendURL}/api${url}`, data);\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Request from \"../Services/Request.service\";\r\nconst MainContext = React.createContext();\r\nconst { Provider, Consumer } = MainContext;\r\n\r\nconst MainProvider = ({ children }) => {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(null);\r\n  const [productToUpdate, setProductToUpdate] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      const response = await Request.get(\"/products\");\r\n      setProducts(response.data);\r\n    };\r\n    getProducts();\r\n    setRefresh(false);\r\n  }, [refresh]);\r\n\r\n  const addProduct = async (barcode, name, quantity) => {\r\n    const response = await Request.post(\"/products\", { barcode, name, quantity });\r\n    if (!!response.data.success) {\r\n      setRefresh(true);\r\n      return response.data.success;\r\n    }\r\n  };\r\n\r\n  const getProduct = async (id) => {\r\n    const response = await Request.get(`/products/${id}`);\r\n    if (!!response.data.success) {\r\n      return response.data.product;\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const updateProduct = async (id, barcode, name, quantity) => {\r\n    const response = await Request.put(`/products/${id}`, { barcode, name, quantity });\r\n    if (!!response.data.success) {\r\n      setRefresh(true);\r\n      return response.data.success;\r\n    }\r\n  };\r\n\r\n  const setPrice = async (id, price) => {\r\n    const response = await Request.put(`/products/setPrice/${id}`, { price });\r\n    if (!!response.data.success) {\r\n      setRefresh(true);\r\n      return response.data.success;\r\n    }\r\n  };\r\n\r\n  const enable = async (id) => {\r\n    const response = await Request.put(`/products/enable/${id}`);\r\n    if (!!response.data.success) {\r\n      setRefresh(true);\r\n      return response.data.success;\r\n    }\r\n  };\r\n\r\n  const disable = async (id) => {\r\n    const response = await Request.put(`/products/disable/${id}`);\r\n    if (!!response.data.success) {\r\n      setRefresh(true);\r\n      return response.data.success;\r\n    }\r\n  };\r\n\r\n  const isDuplicated = async (barcode) => {\r\n    const response = await Request.get(`/products/isDuplicated/${barcode}`);\r\n    return response.data.duplicated;\r\n  };\r\n\r\n  const isDuplicatedForUpdate = async (id, barcode) => {\r\n    const response = await Request.get(`/products/isDuplicatedForUpdate/${id}/${barcode}`);\r\n    return response.data.duplicated;\r\n  };\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        products,\r\n        addProduct,\r\n        getProduct,\r\n        updateProduct,\r\n        setPrice,\r\n        enable,\r\n        disable,\r\n        modalVisible,\r\n        setModalVisible,\r\n        isDuplicated,\r\n        isDuplicatedForUpdate,\r\n        productToUpdate,\r\n        setProductToUpdate,\r\n        successMessage,\r\n        setSuccessMessage,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { MainProvider, Consumer as MainConsumer, MainContext };\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../Context/MainContext.context\";\r\nimport \"./ProductsTable.styles.css\";\r\n\r\nexport default function ProductsTable(props) {\r\n  const { setModalVisible, setProductToUpdate, getProduct } = useContext(MainContext);\r\n  const products = props.products || [];\r\n\r\n  const renderProducts = () => {\r\n    if (products.length < 7) {\r\n      const repetitions = 7 - products.length;\r\n      for (let i = 0; i < repetitions; i++) {\r\n        products.push({});\r\n      }\r\n    }\r\n    return products.map((product, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td>{product.barcode}</td>\r\n          <td>{product.name}</td>\r\n          <td>{product.quantity}</td>\r\n          <td>{product.price ? product.price.toString() : \"\"}</td>\r\n          <td>\r\n            <div className=\"icons-container\">\r\n              {product.price ? (\r\n                product.enabled ? (\r\n                  <img\r\n                    src=\"/images/habx24.png\"\r\n                    alt=\"Deshabilitar\"\r\n                    onClick={async () => {\r\n                      setProductToUpdate(await getProduct(product._id));\r\n                      setModalVisible(\"disableProduct\");\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src=\"/images/deshab.png\"\r\n                    alt=\"Habilitar\"\r\n                    onClick={async () => {\r\n                      setProductToUpdate(await getProduct(product._id));\r\n                      setModalVisible(\"enableProduct\");\r\n                    }}\r\n                  />\r\n                )\r\n              ) : (\r\n                <img className=\"empty-icon\" src=\"/images/nanai.png\" alt=\"Vacio\" />\r\n              )}\r\n              {!product.barcode || product.enabled ? (\r\n                <img className=\"empty-icon\" src=\"/images/nanai.png\" alt=\"Vacio\" />\r\n              ) : (\r\n                <img\r\n                  src=\"/images/editprecio.png\"\r\n                  alt=\"Precio\"\r\n                  onClick={async () => {\r\n                    setProductToUpdate(await getProduct(product._id));\r\n                    setModalVisible(\"addPrice\");\r\n                  }}\r\n                />\r\n              )}\r\n              {!product.barcode || product.enabled ? (\r\n                <img className=\"empty-icon\" src=\"/images/nanai.png\" alt=\"Vacio\" />\r\n              ) : (\r\n                <img\r\n                  src=\"/images/lapizx24.png\"\r\n                  alt=\"Editar\"\r\n                  onClick={async () => {\r\n                    setProductToUpdate(await getProduct(product._id));\r\n                    setModalVisible(\"updateProduct\");\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"products-table\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td>Código de barras</td>\r\n            <td>Nombre del producto</td>\r\n            <td>Existencia</td>\r\n            <td>Precio unitario</td>\r\n            <td>Acciones</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderProducts()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../Context/MainContext.context\";\r\nimport \"./Modal.styles.css\";\r\n\r\nexport default function Modal(props) {\r\n  const { modalVisible } = useContext(MainContext);\r\n\r\n  return (\r\n    <div className={`modal-container ${modalVisible !== props.children.props.form ? \"hidden\" : \"\"}`}>\r\n      <div className=\"modal-box\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Button.styles.css\";\r\n\r\nexport default function Button(props) {\r\n  const { onClick, text } = props;\r\n\r\n  return (\r\n    <div className=\"button\" onClick={onClick}>\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../FormsStyles/FormsStyles.styles.css\";\r\n\r\nexport default function FormControls(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"form-control\">\r\n        <label htmlFor={props.id}>\r\n          {props.required && <span className=\"required\">*</span>}\r\n          {props.label}\r\n        </label>\r\n        <div className=\"form-imput\">\r\n          <input type=\"text\" id={props.id} value={props.value} onChange={props.onChange} />\r\n          <div className={`error-message ${props.duplicated ? \"duplicated\" : \"\"}`}>{props.message}</div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { MainContext } from \"../../../Context/MainContext.context\";\r\nimport Button from \"../../Button/Button.component\";\r\nimport FormControl from \"../FormControl/FormControl.component\";\r\nimport \"../FormsStyles/FormsStyles.styles.css\";\r\n\r\nexport default function AddProductForm() {\r\n  const { setSuccessMessage, setModalVisible, addProduct, isDuplicated } = useContext(MainContext);\r\n  const [product, setProduct] = useState({\r\n    \"addProduct-barcode\": \"\",\r\n    \"addProduct-name\": \"\",\r\n    \"addProduct-quantity\": \"\",\r\n  });\r\n  const [errorFields, setErrorFields] = useState({\r\n    \"addProduct-barcode\": \"\",\r\n    \"addProduct-duplicated-barcode\": false,\r\n    \"addProduct-name\": \"\",\r\n    \"addProduct-quantity\": \"\",\r\n  });\r\n\r\n  const onSubmit = async (event) => {\r\n    let errors = { barcode: \"\", duplicated: false, name: \"\", quantity: \"\" };\r\n\r\n    if (!product[\"addProduct-barcode\"]) {\r\n      errors.barcode = \"Campo obligatorio\";\r\n    } else if (\r\n      !/\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d/.test(product[\"addProduct-barcode\"]) ||\r\n      product[\"addProduct-barcode\"].length > 13\r\n    ) {\r\n      errors.barcode = \"Formato Incorrecto\";\r\n    } else if (await isDuplicated(product[\"addProduct-barcode\"])) {\r\n      errors.duplicated = true;\r\n      errors.barcode = \"Código de barras duplicado\";\r\n    }\r\n\r\n    if (!product[\"addProduct-name\"]) {\r\n      errors.name = \"Campo obligatorio\";\r\n    } else if (!product[\"addProduct-name\"].trim() || product[\"addProduct-name\"].length > 25) {\r\n      errors.name = \"Formato Incorrecto\";\r\n    }\r\n\r\n    if (!product[\"addProduct-quantity\"]) {\r\n      errors.quantity = \"Campo obligatorio\";\r\n    } else if (\r\n      product[\"addProduct-quantity\"].includes(\".\") ||\r\n      product[\"addProduct-quantity\"].startsWith(\"0\") ||\r\n      !Number(product[\"addProduct-quantity\"]) ||\r\n      !Number.isInteger(Number(product[\"addProduct-quantity\"])) ||\r\n      product[\"addProduct-quantity\"] < 1 ||\r\n      product[\"addProduct-quantity\"] > 1000\r\n    ) {\r\n      errors.quantity = \"Formato Incorrecto\";\r\n    }\r\n\r\n    setErrorFields({\r\n      \"addProduct-barcode\": errors.barcode,\r\n      \"addProduct-duplicated-barcode\": errors.duplicated,\r\n      \"addProduct-name\": errors.name,\r\n      \"addProduct-quantity\": errors.quantity,\r\n    });\r\n\r\n    if (!errors.barcode && !errors.duplicated && !errors.name && !errors.quantity) {\r\n      if (\r\n        await addProduct(\r\n          product[\"addProduct-barcode\"],\r\n          product[\"addProduct-name\"],\r\n          Number(product[\"addProduct-quantity\"])\r\n        )\r\n      ) {\r\n        setProduct({\r\n          \"addProduct-barcode\": \"\",\r\n          \"addProduct-name\": \"\",\r\n          \"addProduct-quantity\": \"\",\r\n        });\r\n        setModalVisible(null);\r\n        setSuccessMessage(\"El producto se ha registrado exitosamente.\");\r\n        setTimeout(() => {\r\n          setSuccessMessage(\"\");\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCancel = (event) => {\r\n    setProduct({\r\n      \"addProduct-barcode\": \"\",\r\n      \"addProduct-name\": \"\",\r\n      \"addProduct-quantity\": \"\",\r\n    });\r\n    setErrorFields({\r\n      \"addProduct-barcode\": \"\",\r\n      \"addProduct-duplicated-barcode\": \"\",\r\n      \"addProduct-name\": \"\",\r\n      \"addProduct-quantity\": \"\",\r\n    });\r\n    setModalVisible(null);\r\n  };\r\n\r\n  const OnChangeText = (event) => {\r\n    const { id, value } = event.target;\r\n    setProduct({\r\n      ...product,\r\n      ...{\r\n        [id]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-contain\" id=\"addProduct\">\r\n      <div className=\"form-title\">Registrar Producto</div>\r\n      <form>\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-description\">\r\n            Los campos marcados con <span className=\"required\">*</span> son obligatorios\r\n          </div>\r\n          <FormControl\r\n            id=\"addProduct-barcode\"\r\n            label=\"Código de barras:\"\r\n            required={true}\r\n            message={errorFields[\"addProduct-barcode\"]}\r\n            value={product[\"addProduct-barcode\"]}\r\n            onChange={OnChangeText}\r\n            duplicated={errorFields[\"addProduct-duplicated-barcode\"]}\r\n          />\r\n          <FormControl\r\n            id=\"addProduct-name\"\r\n            label=\"Nombre del producto:\"\r\n            required={true}\r\n            message={errorFields[\"addProduct-name\"]}\r\n            value={product[\"addProduct-name\"]}\r\n            onChange={OnChangeText}\r\n          />\r\n          <FormControl\r\n            id=\"addProduct-quantity\"\r\n            label=\"Número de existencia:\"\r\n            required={true}\r\n            message={errorFields[\"addProduct-quantity\"]}\r\n            value={product[\"addProduct-quantity\"]}\r\n            onChange={OnChangeText}\r\n          />\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <Button onClick={onSubmit} text=\"Aceptar\" />\r\n          <Button onClick={onCancel} text=\"Cancelar\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MainContext } from \"../../../Context/MainContext.context\";\r\nimport Button from \"../../Button/Button.component\";\r\nimport FormControl from \"../FormControl/FormControl.component\";\r\nimport \"../FormsStyles/FormsStyles.styles.css\";\r\n\r\nexport default function UpdateProductForm() {\r\n  const {\r\n    setSuccessMessage,\r\n    modalVisible,\r\n    setModalVisible,\r\n    updateProduct,\r\n    isDuplicatedForUpdate,\r\n    productToUpdate,\r\n  } = useContext(MainContext);\r\n  const [product, setProduct] = useState({\r\n    \"updateProduct-barcode\": \"\",\r\n    \"updateProduct-name\": \"\",\r\n    \"updateProduct-quantity\": \"\",\r\n  });\r\n  const [errorFields, setErrorFields] = useState({\r\n    \"updateProduct-barcode\": \"\",\r\n    \"updateProduct-duplicated-barcode\": false,\r\n    \"updateProduct-name\": \"\",\r\n    \"updateProduct-quantity\": \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (modalVisible === \"updateProduct\") {\r\n      setProduct({\r\n        \"updateProduct-barcode\": productToUpdate.barcode.toString(),\r\n        \"updateProduct-name\": productToUpdate.name.toString(),\r\n        \"updateProduct-quantity\": productToUpdate.quantity.toString(),\r\n      });\r\n    }\r\n  }, [modalVisible]);\r\n\r\n  const onSubmit = async (event) => {\r\n    let errors = { barcode: \"\", duplicated: false, name: \"\", quantity: \"\" };\r\n\r\n    if (!product[\"updateProduct-barcode\"]) {\r\n      errors.barcode = \"Campo obligatorio\";\r\n    } else if (\r\n      !/\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d/.test(product[\"updateProduct-barcode\"]) ||\r\n      product[\"updateProduct-barcode\"].length > 13\r\n    ) {\r\n      errors.barcode = \"Formato Incorrecto\";\r\n    } else if (await isDuplicatedForUpdate(productToUpdate._id, product[\"updateProduct-barcode\"])) {\r\n      errors.duplicated = true;\r\n      errors.barcode = \"Código de barras duplicado\";\r\n    }\r\n\r\n    if (!product[\"updateProduct-name\"]) {\r\n      errors.name = \"Campo obligatorio\";\r\n    } else if (!product[\"updateProduct-name\"].trim() || product[\"updateProduct-name\"].length > 25) {\r\n      errors.name = \"Formato Incorrecto\";\r\n    }\r\n\r\n    if (!product[\"updateProduct-quantity\"]) {\r\n      errors.quantity = \"Campo obligatorio\";\r\n    } else if (\r\n      product[\"updateProduct-quantity\"].includes(\".\") ||\r\n      product[\"updateProduct-quantity\"].startsWith(\"0\") ||\r\n      !Number(product[\"updateProduct-quantity\"]) ||\r\n      !Number.isInteger(Number(product[\"updateProduct-quantity\"])) ||\r\n      product[\"updateProduct-quantity\"] < 1 ||\r\n      product[\"updateProduct-quantity\"] > 1000\r\n    ) {\r\n      errors.quantity = \"Formato Incorrecto\";\r\n    }\r\n\r\n    setErrorFields({\r\n      \"updateProduct-barcode\": errors.barcode,\r\n      \"updateProduct-duplicated-barcode\": errors.duplicated,\r\n      \"updateProduct-name\": errors.name,\r\n      \"updateProduct-quantity\": errors.quantity,\r\n    });\r\n\r\n    if (!errors.barcode && !errors.duplicated && !errors.name && !errors.quantity) {\r\n      if (\r\n        await updateProduct(\r\n          productToUpdate._id,\r\n          product[\"updateProduct-barcode\"],\r\n          product[\"updateProduct-name\"],\r\n          Number(product[\"updateProduct-quantity\"])\r\n        )\r\n      ) {\r\n        setProduct({\r\n          \"updateProduct-barcode\": \"\",\r\n          \"updateProduct-name\": \"\",\r\n          \"updateProduct-quantity\": \"\",\r\n        });\r\n        setModalVisible(null);\r\n        setSuccessMessage(\"El producto se ha editado exitosamente.\");\r\n        setTimeout(() => {\r\n          setSuccessMessage(\"\");\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCancel = (event) => {\r\n    setProduct({\r\n      \"updateProduct-barcode\": \"\",\r\n      \"updateProduct-name\": \"\",\r\n      \"updateProduct-quantity\": \"\",\r\n    });\r\n    setErrorFields({\r\n      \"updateProduct-barcode\": \"\",\r\n      \"updateProduct-duplicated-barcode\": \"\",\r\n      \"updateProduct-name\": \"\",\r\n      \"updateProduct-quantity\": \"\",\r\n    });\r\n    setModalVisible(null);\r\n  };\r\n\r\n  const OnChangeText = (event) => {\r\n    const { id, value } = event.target;\r\n    setProduct({\r\n      ...product,\r\n      ...{\r\n        [id]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-contain\" id=\"updateProduct\">\r\n      <div className=\"form-title\">Editar Producto</div>\r\n      <form>\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-description\">\r\n            Los campos marcados con <span className=\"required\">*</span> son obligatorios\r\n          </div>\r\n          <FormControl\r\n            id=\"updateProduct-barcode\"\r\n            label=\"Código de barras:\"\r\n            required={true}\r\n            message={errorFields[\"updateProduct-barcode\"]}\r\n            value={product[\"updateProduct-barcode\"]}\r\n            onChange={OnChangeText}\r\n            duplicated={errorFields[\"updateProduct-duplicated-barcode\"]}\r\n          />\r\n          <FormControl\r\n            id=\"updateProduct-name\"\r\n            label=\"Nombre del producto:\"\r\n            required={true}\r\n            message={errorFields[\"updateProduct-name\"]}\r\n            value={product[\"updateProduct-name\"]}\r\n            onChange={OnChangeText}\r\n          />\r\n          <FormControl\r\n            id=\"updateProduct-quantity\"\r\n            label=\"Número de existencia:\"\r\n            required={true}\r\n            message={errorFields[\"updateProduct-quantity\"]}\r\n            value={product[\"updateProduct-quantity\"]}\r\n            onChange={OnChangeText}\r\n          />\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <Button onClick={onSubmit} text=\"Aceptar\" />\r\n          <Button onClick={onCancel} text=\"Cancelar\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MainContext } from \"../../../Context/MainContext.context\";\r\nimport Button from \"../../Button/Button.component\";\r\nimport FormControl from \"../FormControl/FormControl.component\";\r\nimport \"../FormsStyles/FormsStyles.styles.css\";\r\n\r\nexport default function AddPriceForm() {\r\n  const { setSuccessMessage, modalVisible, setModalVisible, setPrice, productToUpdate } = useContext(MainContext);\r\n  const [product, setProduct] = useState({\r\n    \"addPrice-price\": \"\",\r\n  });\r\n  const [errorFields, setErrorFields] = useState({\r\n    \"addPrice-price\": \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (modalVisible === \"addPrice\") {\r\n      setProduct({\r\n        \"addPrice-price\": productToUpdate.price ? productToUpdate.price.toString() : \"\",\r\n      });\r\n    }\r\n  }, [modalVisible]);\r\n\r\n  const onSubmit = async (event) => {\r\n    let errors = { price: \"\" };\r\n\r\n    if (!product[\"addPrice-price\"]) {\r\n      if (await setPrice(productToUpdate._id, Number(product[\"addPrice-price\"]))) {\r\n        setProduct({\r\n          \"addPrice-price\": \"\",\r\n        });\r\n        setModalVisible(null);\r\n        if (!productToUpdate.price) {\r\n          setSuccessMessage(\"\");\r\n        } else {\r\n          setSuccessMessage(\"El precio se ha asignado exitosamente.\");\r\n          setTimeout(() => {\r\n            setSuccessMessage(\"\");\r\n          }, 2000);\r\n        }\r\n      }\r\n      return;\r\n    } else if (\r\n      !/^[0-9]+([\\.][0-9]{1,2})?$/m.test(product[\"addPrice-price\"]) ||\r\n      product[\"addPrice-price\"].startsWith(\"0\") ||\r\n      !Number(product[\"addPrice-price\"]) ||\r\n      product[\"addPrice-price\"] < 1 ||\r\n      product[\"addPrice-price\"] > 250000\r\n    ) {\r\n      errors.price = \"Formato Incorrecto\";\r\n    }\r\n\r\n    setErrorFields({\r\n      \"addPrice-price\": errors.price,\r\n    });\r\n\r\n    if (!errors.price) {\r\n      if (await setPrice(productToUpdate._id, Number(product[\"addPrice-price\"]))) {\r\n        setProduct({\r\n          \"addPrice-price\": \"\",\r\n        });\r\n        setModalVisible(null);\r\n        setSuccessMessage(\"El precio se ha asignado exitosamente.\");\r\n        setTimeout(() => {\r\n          setSuccessMessage(\"\");\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCancel = (event) => {\r\n    setProduct({\r\n      \"addPrice-price\": \"\",\r\n    });\r\n    setErrorFields({\r\n      \"addPrice-price\": \"\",\r\n    });\r\n    setModalVisible(null);\r\n  };\r\n\r\n  const OnChangeText = (event) => {\r\n    const { id, value } = event.target;\r\n    setProduct({\r\n      ...product,\r\n      ...{\r\n        [id]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-contain\" id=\"addPrice\">\r\n      <div className=\"form-title\">Asignar Precio</div>\r\n      <form>\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-description\"></div>\r\n          <table className=\"form-data\">\r\n            <tr>\r\n              <td className=\"property\">\r\n                <b>Código de barras: </b>\r\n              </td>\r\n              <td className=\"value\">{productToUpdate.barcode}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"property\">\r\n                <b>Nombre del producto: </b>\r\n              </td>\r\n              <td className=\"value\">{productToUpdate.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"property\">\r\n                <b>Número en existencia: </b>\r\n              </td>\r\n              <td className=\"value\">{productToUpdate.quantity}</td>\r\n            </tr>\r\n          </table>\r\n          <FormControl\r\n            id=\"addPrice-price\"\r\n            label=\"Precio:\"\r\n            required={false}\r\n            message={errorFields[\"addPrice-price\"]}\r\n            value={product[\"addPrice-price\"]}\r\n            onChange={OnChangeText}\r\n          />\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <Button onClick={onSubmit} text=\"Aceptar\" />\r\n          <Button onClick={onCancel} text=\"Cancelar\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../../Context/MainContext.context\";\r\nimport Button from \"../../Button/Button.component\";\r\nimport \"../FormsStyles/FormsStyles.styles.css\";\r\n\r\nexport default function EnableProductForm() {\r\n  const { setModalVisible, enable, productToUpdate } = useContext(MainContext);\r\n\r\n  const onSubmit = async (event) => {\r\n    if (await enable(productToUpdate._id)) {\r\n      setModalVisible(null);\r\n    }\r\n  };\r\n\r\n  const onCancel = (event) => {\r\n    setModalVisible(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-contain\" id=\"enableProduct\">\r\n      <div className=\"form-title\">Habilitar Producto</div>\r\n      <form>\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-description\">\r\n            ¿Está seguro de habilitar Producto: <b>{productToUpdate.name},</b>\r\n            <br />\r\n            con código de barras: <b>{productToUpdate.barcode}</b>?\r\n          </div>\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <Button onClick={onSubmit} text=\"Aceptar\" />\r\n          <Button onClick={onCancel} text=\"Cancelar\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../../Context/MainContext.context\";\r\nimport Button from \"../../Button/Button.component\";\r\nimport \"../FormsStyles/FormsStyles.styles.css\";\r\n\r\nexport default function DisableProductForm() {\r\n  const { setModalVisible, disable, productToUpdate } = useContext(MainContext);\r\n\r\n  const onSubmit = async (event) => {\r\n    if (await disable(productToUpdate._id)) {\r\n      setModalVisible(null);\r\n    }\r\n  };\r\n\r\n  const onCancel = (event) => {\r\n    setModalVisible(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-contain\" id=\"disableProduct\">\r\n      <div className=\"form-title\">Deshabilitar Producto</div>\r\n      <form>\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-description\">\r\n            ¿Está seguro de deshabilitar Producto: <b>{productToUpdate.name},</b>\r\n            <br />\r\n            con código de barras: <b>{productToUpdate.barcode}</b>?\r\n          </div>\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <Button onClick={onSubmit} text=\"Aceptar\" />\r\n          <Button onClick={onCancel} text=\"Cancelar\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../Context/MainContext.context\";\r\nimport \"./Main.styles.css\";\r\nimport ProductsTable from \"../ProductsTable/ProductsTable.component\";\r\nimport Modal from \"../Modal/Modal.component\";\r\nimport AddProductForm from \"../Forms/AddProductForm/AddProductForm.component\";\r\nimport UpdateProductForm from \"../Forms/UpdateProductForm/UpdateProductForm.component\";\r\nimport AddPriceForm from \"../Forms/AddPriceForm/AddPriceForm.component\";\r\nimport EnableProductForm from \"../Forms/EnableProductForm/EnableProductForm.component\";\r\nimport DisableProductForm from \"../Forms/DisableProductForm/DisableProductForm.component\";\r\nimport Button from \"../Button/Button.component\";\r\n\r\nexport default function MainMenu() {\r\n  const { successMessage, products, setModalVisible } = useContext(MainContext);\r\n  return (\r\n    <div id=\"main\">\r\n      <Modal>\r\n        <AddProductForm form=\"addProduct\" />\r\n      </Modal>\r\n      <Modal>\r\n        <UpdateProductForm form=\"updateProduct\" />\r\n      </Modal>\r\n      <Modal>\r\n        <AddPriceForm form=\"addPrice\" />\r\n      </Modal>\r\n      <Modal>\r\n        <EnableProductForm form=\"enableProduct\" />\r\n      </Modal>\r\n      <Modal>\r\n        <DisableProductForm form=\"disableProduct\" />\r\n      </Modal>\r\n      <div id=\"main-title\">Catálogo de productos</div>\r\n      <div id=\"main-message\">{successMessage}</div>\r\n      <ProductsTable products={products} />\r\n      <Button onClick={() => setModalVisible(\"addProduct\")} text=\"Registrar\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { MainProvider } from \"./Context/MainContext.context\";\n//#region CSS Imports\n\n//#endregion\n\n//#region Import Components\nimport Main from \"./Components/Main/Main.component\";\n\n//#endregion\n\nfunction App() {\n  return (\n    <MainProvider>\n      <Router>\n        <Route path=\"/\" exact component={Main} />\n      </Router>\n    </MainProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}